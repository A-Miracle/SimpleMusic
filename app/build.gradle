import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

//加载签名配置的文件
Properties props = new Properties()
props.load(new FileInputStream(file("signature.properties")))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.ctao.music"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' , 'armeabi-v7a' , 'arm64-v8a' //, 'x86', 'x86_64'
        }
    }

    signingConfigs {

        debug {
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
        }

        release { // 设置release的签名信息
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
        }
    }

    buildTypes {
        debug{
            signingConfig signingConfigs.debug
            minifyEnabled false
            zipAlignEnabled true
            debuggable true
            jniDebuggable true
            applicationIdSuffix ".debug"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "BUGLY_DEBUG", "true"
            versionNameSuffix " Music"
            resValue "string", "fileprovider", "com.ctao.music.debug.fileprovider"
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true // 是否混淆
            zipAlignEnabled true // 采用align进行优化
            debuggable false // debug模式
            jniDebuggable false // jni debug模式
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "BUGLY_DEBUG", "false" // 是否输出LOG信息
            resValue "string", "fileprovider", "com.ctao.music.fileprovider"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def buildTime(String format) {
    def df = new SimpleDateFormat(format)
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date())
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.media:media:1.1.0'

    api project(':baselib')

    // The third party
    implementation 'org.greenrobot:eventbus:3.2.0' //Proguard

    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1' //No Proguard
    implementation 'com.github.bumptech.glide:glide:4.11.0' //No Proguard
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0' //Proguard
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0' //Proguard
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0' //Proguard
//
    implementation 'com.github.yalantis:ucrop:2.2.5' //Proguard
    implementation 'com.squareup.picasso:picasso:2.5.2' //Proguard

    //Proguard
    implementation 'com.tencent.bugly:crashreport:3.2.3' //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:3.7.3' //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

    implementation "org.permissionsdispatcher:permissionsdispatcher:4.7.0"
    annotationProcessor "org.permissionsdispatcher:permissionsdispatcher-processor:4.7.0"
}
